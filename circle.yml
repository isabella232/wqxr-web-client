version: 2

defaults: &defaults
  docker:
    - image: circleci/node:8.6.0-browsers
      environment:
        JOBS: 2

restore_bower: &restore_bower
  restore_cache:
    key: bower-deps-{{ checksum "bower.json" }}

restore_node: &restore_node
  restore_cache:
    key: v2-node8-yarn-deps-{{ arch }}-{{ checksum "yarn.lock" }}

restore_modernizr: &restore_modernizr
  restore_cache:
    key: modernizr-{{ .Revision }}

jobs:
  install:
    <<: *defaults

    steps:
      - checkout

      - run:
          name: Install grunt and bower
          command: yarn global add bower grunt-cli

      - <<: *restore_bower
      - run:
          name: Install bower deps
          command: |
            if [ ! -d bower_components ]; then
              npx bower i
            fi
      - save_cache:
          key: bower-deps-{{ checksum "bower.json" }}
          paths:
            - bower_components

      - <<: *restore_node
      - run:
          name: Node dependencies
          command: |
            if [ ! -d node_modules ]; then
              yarn --pure-lockfile
            fi
      - save_cache:
          key: v2-node8-yarn-deps-{{ arch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - <<: *restore_modernizr
      - run:
          name: Build modernizr
          command: |
            if [ ! -f vendor/modrnizr/modernizr-build.js ]; then
              npx grunt modernizr:dist
            fi
      - save_cache:
          key: modernizr-{{ .Revision }}
          paths:
            - vendor/modernizr/modernizr-build.js

  test:
    <<: *defaults

    steps:
      - checkout
      - <<: *restore_bower
      - <<: *restore_node
      - <<: *restore_modernizr
      - run:
          name: Test
          command: npx ember test -r xunit
      - store_test_results:
          path: test-results/wqxr-testem/

  deploy_production:
    <<: *defaults
    steps:
      - checkout
      - <<: *restore_bower
      - <<: *restore_node
      - <<: *restore_modernizr

      - run:
          name: Deploy to production
          command: |
            env | sed -n 's/^DEPLOY_//p' > .env
            env | sed -n 's/^PROD_//p' >> .env
            npx ember deploy production --verbose --activate

  deploy_demo:
    <<: *defaults
    steps:
      - checkout
      - <<: *restore_bower
      - <<: *restore_node
      - <<: *restore_modernizr

      - run:
          name: Deploy to demo
          command: |
            env | sed -n 's/^DEPLOY_//p' > .env
            env | sed -n 's/^DEMO_//p' >> .env
            npx ember deploy demo --verbose --activate

  deploy_qa:
    <<: *defaults
    steps:
      - checkout
      - <<: *restore_bower
      - <<: *restore_node
      - <<: *restore_modernizr

      - run:
          name: Deploy QA build
          command: |
            env | sed -n 's/^DEPLOY_//p' > .env
            env | sed -n 's/^DEMO_//p' >> .env
            npx ember deploy qa:$CIRCLE_BRANCH --verbose --activate
      - run:
          name: Make QA artifact
          command: |
            mkdir /tmp/qa-builds
            echo "<a href=\"https:$DEMO_WQXR_URL?build=$CIRCLE_BRANCH\">https:$DEMO_WQXR_URL?build=$CIRCLE_BRANCH</a>" > /tmp/qa-builds/$CIRCLE_SHA1.html

      - store_artifacts:
          path: /tmp/qa-builds

workflows:
  version: 2
  install-test-deploy:
    jobs:
      - install:
          filters:
            tags:
              only: /.*/
      - test:
          filters:
            tags:
              only: /.*/
          requires:
            - install
      - deploy_production:
          requires:
            - test
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/
      - deploy_demo:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy_qa:
          requires:
            - test
          filters:
            branches:
              only: /[A-Za-z-_]+/[A-Za-z-_\d]+/
